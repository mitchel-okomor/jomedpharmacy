{"version":3,"file":"static/webpack/static\\development\\pages\\editproduct\\[id].js.7438517fb69d4105a96c.hot-update.js","sources":["webpack:///./pages/editproduct/.js"],"sourcesContent":["import React, { useState, useReducer,useEffect } from \"react\";\r\nimport css from './editproduct.module.scss';\r\nimport axios from \"axios\";\r\nimport Loading from '../../components/loading';\r\nimport Link from \"next/link\";\r\nimport { useRouter } from 'next/router'\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n  customerId:\"\",\r\n      name: \"\",\r\n  price: \"\",\r\n  category: \"\",\r\n  description: \"\",\r\nloading: false,\r\n};\r\n\r\n//handle state changes with reducer\r\nconst reducer = (state, { field, value }) => {\r\nreturn { ...state, [field]: value  };\r\n};\r\n\r\nconst EditProduct = () => {\r\n    const router = useRouter()\r\nconst [product, setProduct] = useState(\"\");\r\n    //use reducer hook to dispatch change action\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const handleChange = (e) => {\r\n    dispatch({ field: e.target.name, value: e.target.value });\r\n  };\r\n\r\n  //during component mounting\r\n  useEffect(()=>{\r\n    fetchData();   \r\nconst customerId = localStorage.getItem(\"customerId\");\r\ndispatch({field:\"customerId\", value:customerId}); \r\n \r\n  },[])\r\n\r\n  //submit form data to backend server\r\n  const handleSubmit =async (e) => {\r\n   e.preventDefault();\r\n   \r\n        dispatch({field:\"loading\", value:true});\r\nconst url = 'http://localhost:4000/product/'+product.product_id;\r\n  console.log(state);  \r\n  try{\r\n  const response = await axios.patch(url, state, {\r\n    timeout: 60000\r\n  });\r\n  if(response.status==200){\r\n   console.log(response);\r\n   localStorage.setItem(\"customerId\", response);\r\ndispatch({field:\"loading\", value:false}); \r\nrouter.push(\"/admin\");\r\n  }\r\n}\r\n  catch(error){\r\n    console.log(error);\r\n    dispatch({field:\"loading\", value:false}); \r\n  }\r\n  \r\n  };\r\n\r\n\r\nconst fetchData = async ()=>{\r\n  const id = router.query.id;\r\n  const res = await fetch(`http://localhost:4000/product/${id}`);\r\n  const result = await res.json();\r\n  const product = result.data;\r\n  setProduct(product);\r\n\r\n  dispatch({field:\"name\", value:product.name}); \r\ndispatch({field:\"category\", value:product.category}); \r\ndispatch({field:\"price\", value:product.price}); \r\ndispatch({field:\"description\", value:product.description});\r\n  console.log(product);\r\n\r\n}\r\n\r\n\r\n\r\n  const { name, price, category, description, loading, chat, button} = state;\r\n  if(loading){\r\n    \r\nreturn(\r\n  <div className={css.editproduct}>\r\n<Loading />\r\n    </div>\r\n) \r\n    }\r\n  return (\r\n    <div className={css.editproduct}>\r\n    <div id={css.myForm}>\r\n      <br />\r\n        <form className={css.formcontainer}>\r\n          <fieldset>\r\n            <legend><b><h3 className={css.heading}>Edit Product</h3></b></legend>\r\n            <br />\r\n            <label for=\"fname\">Name:</label> <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n              required\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label for=\"price\">Price:</label> <br />\r\n            <input\r\n              type=\"number\"\r\n              id=\"price\"\r\n              name=\"price\"\r\n              value={price}\r\n              required\r\n              onChange={handleChange}\r\n              \r\n            />\r\n            <br />\r\n            <label for=\"prescription\">prescription details:</label> <br />\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"prescription\"\r\n              name=\"description\"\r\n              value={description}\r\n              required\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label for=\"category\">category:</label>\r\n    <select id=\"category\" name=\"category\" onChange={handleChange}>\r\n      <option value=\"antibiotics\" selected>Antibiotics</option>\r\n      <option value=\"antidiabetics\">Antidiabetics</option>\r\n      <option value=\"antimaleria\">Antimaleria</option>\r\n    </select>\r\n            <br />\r\n            <br />\r\n            <button type=\"submit\" className={css.btn}  onClick={handleSubmit}>Submit</button>\r\n      \r\n            <button  className={css.cancel} > <Link href=\"/admin\">cancel</Link></button>\r\n          </fieldset>\r\n        </form>\r\n        </div>\r\n</div>\r\n  );\r\n};\r\n\r\n// EditProduct.getInitialProps = async function(context) {\r\n//     const { id } = context.query;\r\n//     const res = await fetch(`http://localhost:4000/product/${id}`);\r\n//     const result = await res.json();\r\n//     console.log(result.data);\r\n//     const product = result.data;\r\n//     return {product};\r\n  \r\n// }\r\n\r\nexport default EditProduct;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAQA;AADA;AACA;AARA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAhBA;AAAA;AACA;AADA;AAAA;AAAA;AAkBA;AACA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA4DA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;;;;A","sourceRoot":""}