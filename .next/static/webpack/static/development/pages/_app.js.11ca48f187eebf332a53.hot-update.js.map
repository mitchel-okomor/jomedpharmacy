{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.11ca48f187eebf332a53.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App from 'next/app';\r\nimport './styles.scss'\r\nimport Layout from '../components/layout';\r\nimport cartcontext from '../components/cartcontext';\r\n\r\n\r\n// This default export is required in a new `pages/_app.js` file.\r\nclass MyApp extends App{\r\n  state = {\r\n    customr:'',\r\n    cart : [],\r\n    carttotal : 0\r\n}\r\n\r\ncomponentDidMount = () => {\r\n  //get cart items from local storage\r\n  const cart = JSON.parse(localStorage.getItem('cart'));\r\n  //get cart total\r\n  const carttotal = JSON.parse(localStorage.getItem('total'));\r\nconst user = async()=> {\r\n  const res = await fetch('http://localhost:4000/customer/16');\r\n  const data = await res.json();\r\n const user = data.data;\r\nreturn user;\r\n}\r\n\r\n  if (cart) {\r\n    this.setState({\r\n      customer:user,\r\n       cart:cart,\r\n       carttotal:carttotal\r\n    });\r\n  }\r\n};\r\n\r\n//add a product to cart\r\naddToCart = async (product) => {\r\n await this.setState({\r\n      cart: [...this.state.cart, product]\r\n  });\r\n  //save to local storage\r\n  localStorage.setItem('cart', JSON.stringify(this.state.cart));\r\n}\r\n\r\ncalculateTotal = async (price) => {\r\n  await this.setState({\r\n    carttotal: this.state.carttotal + price\r\n  });\r\n  localStorage.setItem('total', JSON.stringify(this.state.carttotal));\r\n}\r\n\r\nremoveFromTotal = async (price) => {\r\n  if(this.state.carttotal >= 1){\r\n  await  this.setState({\r\n    carttotal: this.state.carttotal - price\r\n  });\r\n  localStorage.setItem('total', JSON.stringify(this.state.carttotal));\r\n  }\r\n  \r\n}\r\n\r\nremoveFromCart = async (id)=>{\r\n  console.log(\"product: \"+id);\r\n  let cart = this.state.cart\r\n  let newCart = [];\r\n  for(let i=0; i<=cart.length; i++){\r\nif(cart[i].id == id){\r\n  continue;\r\n}\r\nconsole.log(cart[i]);\r\nnewCart.push(cart[i]);\r\n  }\r\n await this.setState({\r\n    cart:newCart\r\n});\r\n//save to local storage\r\nlocalStorage.setItem('cart', JSON.stringify(this.state.cart));\r\n console.log(\"removing\")\r\n}\r\n\r\nrender(){ const { Component, pageProps } = this.props\r\n\r\n      return(\r\n <cartcontext.Provider value={{cart: this.state.cart, addToCart: this.addToCart, total: this.calculateTotal, removeFromCart: this.removeFromCart, removeFromTotal: this.removeFromTotal, carttotal: this.state.carttotal}}>\r\n<Layout>\r\n   <Component {...pageProps} /> \r\n</Layout>\r\n</cartcontext.Provider>\r\n  )  \r\n    }\r\n   \r\n}\r\n\r\n\r\nexport default MyApp;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AAIA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AADA;AACA;AAHA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAQA;AACA;AACA;AAVA;AAIA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAYA;AADA;AACA;AAZA;AAcA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAkBA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAlFA;AACA;AAsFA;;;;A","sourceRoot":""}