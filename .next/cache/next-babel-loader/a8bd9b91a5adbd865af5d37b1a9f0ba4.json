{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\pages\\\\resetpassword\\\\[token].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport axios from \"axios\";\n\nconst ResetPassword = ({\n  valid,\n  token\n}) => {\n  const {\n    0: password,\n    1: setPassword\n  } = useState();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await axios.post(\"http://localhost:4000/resetpassword\", {\n      \"email\": email\n    }, {\n      timeout: 30000\n    });\n    console.log(response);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Forget password\"), valid ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: \"margin:auto; text-align:center;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Enter your new password.\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"New password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"Set new password\"))) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"This link may have been expired\"));\n};\n\nResetPassword.getInitialProps = async ctx => {\n  const {\n    token\n  } = ctx.query;\n  const valid = await fetch(`http://localhost:4000/confirmation/${token}`, {\n    method: 'POST'\n  });\n  console.log(valid);\n  return {\n    token,\n    valid\n  };\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/pages/resetpassword/[token].js"],"names":["useState","axios","ResetPassword","valid","token","password","setPassword","handleSubmit","event","preventDefault","response","post","email","timeout","console","log","e","target","value","getInitialProps","ctx","query","fetch","method"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAG1C,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,EAAxC;;AAGA,QAAOO,YAAY,GAAG,MAAOC,KAAP,IAAgB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,qCAAX,EAAkD;AAAC,eAAQC;AAAT,KAAlD,EAAmE;AACxFC,MAAAA,OAAO,EAAE;AAD+E,KAAnE,CAAvB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,GAND;;AASE,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEKP,KAAK,GACJ,4BACE;AAAG,IAAA,KAAK,EAAC,iCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAM,IAAA,QAAQ,EAAEI,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,KAAK,EAAEF,QAHT;AAIE,IAAA,QAAQ,EAAEW,CAAC,IAAIV,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,CAFF,CADI,GAgBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAlBN,CADA;AAuBD,CAtCH;;AAwCEhB,aAAa,CAACiB,eAAd,GAAgC,MAAMC,GAAN,IAAa;AAC3C,QAAM;AAAEhB,IAAAA;AAAF,MAAYgB,GAAG,CAACC,KAAtB;AACA,QAAMlB,KAAK,GAAG,MAAMmB,KAAK,CACtB,sCAAqClB,KAAM,EADrB,EAEvB;AAAEmB,IAAAA,MAAM,EAAE;AAAV,GAFuB,CAAzB;AAIET,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACF,SAAO;AAAEC,IAAAA,KAAF;AAASD,IAAAA;AAAT,GAAP;AAED,CATD;;AAWA,eAAeD,aAAf","sourcesContent":["import {useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst ResetPassword = ({ valid, token }) => {\r\n  \r\n  \r\n  const [password, setPassword] = useState();\r\n\r\n\r\n  const  handleSubmit = async (event) =>{\r\n    event.preventDefault();\r\n    const response = await axios.post(\"http://localhost:4000/resetpassword\", {\"email\":email}, {\r\n      timeout: 30000\r\n    });\r\n    console.log(response);\r\n  }\r\n\r\n\r\n    return (\r\n    <div>\r\n        <h2>Forget password</h2>\r\n        {valid ? (\r\n          <>\r\n            <p style=\"margin:auto; text-align:center;\">Enter your new password.</p>\r\n            <form onSubmit={handleSubmit}>\r\n              <div>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"New password\"\r\n                  value={password}\r\n                  onChange={e => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <button type=\"submit\">Set new password</button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <p>This link may have been expired</p>\r\n        )}\r\n     </div>\r\n    );\r\n  };\r\n  \r\n  ResetPassword.getInitialProps = async ctx => {\r\n    const { token } = ctx.query;\r\n    const valid = await fetch(\r\n      `http://localhost:4000/confirmation/${token}`,\r\n      { method: 'POST' }\r\n    )\r\n      console.log(valid);\r\n    return { token, valid };\r\n\r\n  };\r\n  \r\n  export default ResetPassword;"]},"metadata":{},"sourceType":"module"}