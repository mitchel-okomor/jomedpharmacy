{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\components\\\\login.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useReducer } from \"react\";\nimport css from './login.module.scss';\nimport axios from \"axios\";\nimport Loading from './loading';\nimport { useContext } from 'react';\nimport CartContext from './cartcontext';\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  loading: false,\n  message: \"\"\n};\nconst {\n  setCustomer\n} = useContext(CartContext); //handle state changes with reducer\n\nconst reducer = (state, {\n  field,\n  value\n}) => {\n  return _objectSpread({}, state, {\n    [field]: value\n  });\n};\n\nconst Login = props => {\n  //use reducer hook to dispatch change action\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n\n  const handleChange = e => {\n    dispatch({\n      field: e.target.name,\n      value: e.target.value\n    });\n  }; //submit form data to backend server\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      field: \"loading\",\n      value: true\n    });\n    const url = 'http://localhost:4000/logincustomer';\n\n    try {\n      const response = await axios.post(url, state, {\n        timeout: 30000\n      });\n\n      if (response.status == 200) {\n        console.log(\"passed: \" + JSON.stringify(response.data.message));\n        dispatch({\n          field: \"message\",\n          value: response.data.message\n        });\n        localStorage.setItem(\"customerId\", response.data.customer.id);\n        localStorage.setItem(\"token\", response.data.info.token);\n        setCustomer(response.data.customer);\n        dispatch({\n          field: \"loading\",\n          value: false\n        });\n      } else {\n        console.log(\"failed: \" + response.data);\n        dispatch({\n          field: \"message\",\n          value: response.data.message\n        });\n        dispatch({\n          field: \"loading\",\n          value: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        field: \"message\",\n        value: \"Email or Password Incorrect\"\n      });\n      dispatch({\n        field: \"loading\",\n        value: false\n      });\n    }\n  };\n\n  const {\n    email,\n    password,\n    loading,\n    message\n  } = state;\n\n  if (loading) {\n    return __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: css.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    className: css.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Login:\"), __jsx(\"label\", {\n    for: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Email:\"), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 55\n    }\n  }), __jsx(\"input\", {\n    type: \"email\",\n    id: \"email-address\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    for: \"login-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"password:\"), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 59\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    id: \"login-password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Submit\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, message))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/components/login.js"],"names":["React","useState","useReducer","css","axios","Loading","useContext","CartContext","initialState","email","password","loading","message","setCustomer","reducer","state","field","value","Login","props","dispatch","handleChange","e","target","name","handleSubmit","preventDefault","url","response","post","timeout","status","console","log","JSON","stringify","data","localStorage","setItem","customer","id","info","token","error","form","login"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\r\nimport css from './login.module.scss';\r\nimport axios from \"axios\";\r\nimport Loading from './loading';\r\nimport { useContext } from 'react';\r\nimport CartContext from './cartcontext';\r\n\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  loading: false,\r\n  message: \"\"\r\n};\r\n\r\nconst {setCustomer} = useContext(CartContext);\r\n\r\n//handle state changes with reducer\r\nconst reducer = (state, { field, value }) => {\r\n  return { ...state, [field]: value };\r\n};\r\n\r\nconst Login = (props) => {\r\n    //use reducer hook to dispatch change action\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const handleChange = (e) => {\r\n    dispatch({ field: e.target.name, value: e.target.value });\r\n  };\r\n\r\n  //submit form data to backend server\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch({field:\"loading\", value:true});\r\n    const url = 'http://localhost:4000/logincustomer';\r\n    try{\r\n    const response = await axios.post(url, state, {\r\n      timeout: 30000\r\n    });\r\n    if(response.status==200){\r\n           console.log(\"passed: \"+JSON.stringify(response.data.message));\r\n           dispatch({field:\"message\", value:response.data.message}); \r\n     localStorage.setItem(\"customerId\", response.data.customer.id);\r\n     localStorage.setItem(\"token\", response.data.info.token);\r\n     setCustomer(response.data.customer);\r\n     dispatch({field:\"loading\", value:false}); \r\n    }\r\n    else{\r\n      console.log(\"failed: \"+response.data)\r\n      dispatch({field:\"message\", value:response.data.message}); \r\n      dispatch({field:\"loading\", value:false}); \r\n\r\n    }\r\n  }\r\n    catch(error){\r\n      console.log(error);\r\n      dispatch({field:\"message\", value:\"Email or Password Incorrect\"}); \r\n      dispatch({field:\"loading\", value:false}); \r\n    }  \r\n  };\r\n\r\n\r\n  const {email, password, loading, message } = state;\r\n  if(loading){\r\n    return <Loading />\r\n        }\r\n  return (\r\n\r\n      <div className={css.form}>\r\n        <form className={css.login}>\r\n          <fieldset>\r\n            <legend>Login:</legend>\r\n            <label for=\"email-address\">Email:</label> <br />\r\n            <input\r\n              type=\"email\"\r\n              id=\"email-address\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label for=\"login-password\">password:</label> <br />\r\n            <input\r\n              type=\"password\"\r\n              id=\"login-password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <br/>\r\n  <div>{message}</div>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}