{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\pages\\\\resetpassword\\\\[token].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport axios from \"axios\";\nimport css from \"./reset.module.scss\";\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var valid = _ref.valid,\n      token = _ref.token;\n\n  var _useState = useState(),\n      password = _useState[0],\n      setPassword = _useState[1];\n\n  var _useState2 = useState(),\n      confirmPassword = _useState2[0],\n      setConfirmPassword = _useState2[1];\n\n  var _useState3 = useState(),\n      message = _useState3[0],\n      setMessage = _useState3[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    var val1, val2, response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            val1 = document.getElementById(\"password\");\n            val2 = document.getElementById(\"confirm_password\");\n\n            if (!(val1 === val2)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:4000/resetpassword/\" + token, {\n              \"password\": password\n            }, {\n              timeout: 30000\n            }));\n\n          case 7:\n            response = _context.sent;\n            console.log(response);\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n\n          case 14:\n            _context.next = 17;\n            break;\n\n          case 16:\n            setMessage(\"Password did not match, please check again\");\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 11]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), __jsx(\"h2\", {\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Forget password\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), valid ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Enter your new password.\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"New password\",\n    id: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    id: \"confirm_password\",\n    placeholder: \"Confirm password\",\n    value: confirmPassword,\n    onChange: function onChange(e) {\n      return setConfirmPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  })), __jsx(\"div\", {\n    className: css.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, message), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Set new password\"))) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"This link may have been expired\"));\n};\n\nvar style = {\n  \"margin\": \"auto\",\n  \"text-align\": \"center\"\n};\n\nResetPassword.getInitialProps = function _callee(ctx) {\n  var token, res;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          token = ctx.query.token;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:4000/verifytoken/\".concat(token), {\n            method: 'GET'\n          }));\n\n        case 4:\n          res = _context2.sent;\n          console.log(res);\n\n          if (!(res.status === 200)) {\n            _context2.next = 8;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", {\n            token: token,\n            valid: true\n          });\n\n        case 8:\n          _context2.next = 13;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 10]], Promise);\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/pages/resetpassword/[token].js"],"names":["useState","axios","css","ResetPassword","valid","token","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","handleSubmit","event","preventDefault","val1","document","getElementById","val2","post","timeout","response","console","log","style","e","target","value","getInitialProps","ctx","query","fetch","method","res","status"],"mappings":"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","sourcesContent":["import {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport css from \"./reset.module.scss\";\r\n\r\nconst ResetPassword = ({ valid, token }) => {\r\n  \r\n  \r\n  const [password, setPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [message, setMessage] = useState();\r\n\r\n\r\n  const  handleSubmit = async (event) =>{\r\n    event.preventDefault();\r\n    let val1 = document.getElementById(\"password\");\r\n    let val2 = document.getElementById(\"confirm_password\");\r\n    if(val1 === val2){\r\n      try{\r\n  const response = await axios.post(\"http://localhost:4000/resetpassword/\"+token, {\"password\":password}, {\r\n      timeout: 30000\r\n    });\r\n    console.log(response);\r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    }else{\r\nsetMessage(\"Password did not match, please check again\");\r\n    }\r\n  \r\n  }\r\n\r\n\r\n    return (\r\n    <div>\r\n      <br />\r\n      <br />\r\n        <h2 style={style}>Forget password</h2>\r\n        <br />\r\n        {valid ? (\r\n          <>\r\n            <p style={style}>Enter your new password.</p>\r\n            <br />\r\n            <form onSubmit={handleSubmit}>\r\n              <div>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"New password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={e => setPassword(e.target.value)}\r\n                />\r\n                  <input\r\n                  type=\"password\"\r\n                  id=\"confirm_password\"\r\n                  placeholder=\"Confirm password\"\r\n                  value={confirmPassword}\r\n                  onChange={e => setConfirmPassword(e.target.value)}\r\n                />\r\n              </div>\r\n        <div className={css.message}>{message}</div>\r\n              <button type=\"submit\">Set new password</button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <p>This link may have been expired</p>\r\n        )}\r\n     </div>\r\n    );\r\n  };\r\n\r\n  const style = {\r\n    \"margin\":\"auto\", \r\n    \"text-align\":\"center\"\r\n  }\r\n  \r\n  ResetPassword.getInitialProps = async ctx => {\r\n    const { token } = ctx.query;\r\n    try{\r\n   const res = await fetch(\r\n      `http://localhost:4000/verifytoken/${token}`,\r\n      { method: 'GET' }\r\n    )\r\n    console.log(res);\r\n    if(res.status === 200){\r\n          return { token, valid:true};\r\n    }\r\n    }catch(err){\r\nconsole.log(err);\r\n    }\r\n \r\n  };\r\n  \r\n  export default ResetPassword;"]},"metadata":{},"sourceType":"module"}