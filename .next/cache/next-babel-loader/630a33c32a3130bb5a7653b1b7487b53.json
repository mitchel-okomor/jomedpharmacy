{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useReducer } from \"react\";\nimport css from './login.module.scss';\nimport axios from \"axios\";\nimport Loading from './loading';\nimport appContext from './appcontext';\nimport Link from 'next/link';\nvar initialState = {\n  email: \"\",\n  password: \"\",\n  loading: false,\n  message: \"\"\n}; //handle state changes with reducer\n\nvar reducer = function reducer(state, _ref) {\n  var field = _ref.field,\n      value = _ref.value;\n  return _objectSpread({}, state, _defineProperty({}, field, value));\n};\n\nvar Login = function Login() {\n  var _useContext = useContext(appContext),\n      setCustomer = _useContext.setCustomer; //use reducer hook to dispatch change action\n\n\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var handleChange = function handleChange(e) {\n    dispatch({\n      field: e.target.name,\n      value: e.target.value\n    });\n  }; //submit form data to backend server\n\n\n  var handleSubmit = function handleSubmit(e) {\n    var url, response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            dispatch({\n              field: \"loading\",\n              value: true\n            });\n            url = 'http://localhost:4000/logincustomer';\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(url, state, {\n              timeout: 30000\n            }));\n\n          case 6:\n            response = _context.sent;\n\n            if (response.status == 200) {\n              console.log(\"passed: \" + JSON.stringify(response.data.message));\n              dispatch({\n                field: \"message\",\n                value: response.data.message\n              });\n              localStorage.setItem(\"customerId\", response.data.customer.customer_id);\n              localStorage.setItem(\"token\", response.data.info.token);\n              setCustomer(response.data.customer);\n              dispatch({\n                field: \"loading\",\n                value: false\n              });\n            } else {\n              console.log(\"failed: \" + response.data);\n              dispatch({\n                field: \"message\",\n                value: response.data.message\n              });\n              dispatch({\n                field: \"loading\",\n                value: false\n              });\n            }\n\n            _context.next = 15;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n            dispatch({\n              field: \"message\",\n              value: \"Email or Password Incorrect\"\n            });\n            dispatch({\n              field: \"loading\",\n              value: false\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n\n  var email = state.email,\n      password = state.password,\n      loading = state.loading,\n      message = state.message;\n\n  if (loading) {\n    return __jsx(Loading, null);\n  }\n\n  return __jsx(\"div\", {\n    className: css.form\n  }, __jsx(\"form\", {\n    className: css.login\n  }, __jsx(\"fieldset\", null, __jsx(\"legend\", null, \"Login:\"), __jsx(\"label\", {\n    \"for\": \"email\"\n  }, \"Email:\"), \" \", __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange\n  }), __jsx(\"br\", null), __jsx(\"label\", {\n    \"for\": \"password\"\n  }, \"password:\"), \" \", __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange\n  }), \" \", __jsx(\"br\", null), __jsx(\"button\", {\n    onClick: handleSubmit\n  }, \"Submit\"), __jsx(\"br\", null), __jsx(\"div\", {\n    className: css.message\n  }, message), __jsx(\"div\", {\n    className: css.password\n  }, __jsx(Link, {\n    href: \"/resetpassword\"\n  }, __jsx(\"a\", null, \"forgot Password\")), \" \"))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}