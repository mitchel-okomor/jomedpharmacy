{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useReducer } from \"react\";\nimport css from './login.module.scss';\nimport axios from \"axios\";\nimport Loading from './loading';\nimport appContext from './appcontext';\nimport Link from 'next/link';\nconst initialState = {\n  email: \"\",\n  password: \"\",\n  loading: false,\n  message: \"\"\n}; //handle state changes with reducer\n\nconst reducer = (state, {\n  field,\n  value\n}) => {\n  return _objectSpread({}, state, {\n    [field]: value\n  });\n};\n\nconst Login = () => {\n  const {\n    setCustomer\n  } = useContext(appContext); //use reducer hook to dispatch change action\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n\n  const handleChange = e => {\n    dispatch({\n      field: e.target.name,\n      value: e.target.value\n    });\n  }; //submit form data to backend server\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      field: \"loading\",\n      value: true\n    });\n    const url = 'http://localhost:4000/logincustomer';\n\n    try {\n      const response = await axios.post(url, state, {\n        timeout: 30000\n      });\n\n      if (response.status == 200) {\n        console.log(\"passed: \" + JSON.stringify(response.data.message));\n        dispatch({\n          field: \"message\",\n          value: response.data.message\n        });\n        localStorage.setItem(\"customerId\", response.data.customer.customer_id);\n        localStorage.setItem(\"token\", response.data.info.token);\n        setCustomer(response.data.customer);\n        dispatch({\n          field: \"loading\",\n          value: false\n        });\n      } else {\n        console.log(\"failed: \" + response.data);\n        dispatch({\n          field: \"message\",\n          value: response.data.message\n        });\n        dispatch({\n          field: \"loading\",\n          value: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        field: \"message\",\n        value: \"Email or Password Incorrect\"\n      });\n      dispatch({\n        field: \"loading\",\n        value: false\n      });\n    }\n  };\n\n  const {\n    email,\n    password,\n    loading,\n    message\n  } = state;\n\n  if (loading) {\n    return __jsx(Loading, null);\n  }\n\n  return __jsx(\"div\", {\n    className: css.form\n  }, __jsx(\"form\", {\n    className: css.login\n  }, __jsx(\"fieldset\", null, __jsx(\"legend\", null, \"Login:\"), __jsx(\"label\", {\n    for: \"email\"\n  }, \"Email:\"), \" \", __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange\n  }), __jsx(\"br\", null), __jsx(\"label\", {\n    for: \"password\"\n  }, \"password:\"), \" \", __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange\n  }), \" \", __jsx(\"br\", null), __jsx(\"button\", {\n    onClick: handleSubmit\n  }, \"Submit\"), __jsx(\"br\", null), __jsx(\"div\", {\n    className: css.message\n  }, message), __jsx(\"div\", {\n    className: css.password\n  }, __jsx(Link, {\n    href: \"/resetpassword\"\n  }, __jsx(\"a\", null, \"forgot Password\")), \" \"))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}