{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport axios from \"axios\";\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var valid = _ref.valid,\n      token = _ref.token;\n\n  var _useState = useState(),\n      password = _useState[0],\n      setPassword = _useState[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:4000/resetpassword\", {\n              \"password\": password\n            }, {\n              timeout: 30000\n            }));\n\n          case 3:\n            response = _context.sent;\n            console.log(response);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"h2\", {\n    style: style\n  }, \"Forget password\"), __jsx(\"br\", null), valid ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    style: style\n  }, \"Enter your new password.\"), __jsx(\"br\", null), __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", null, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"New password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Set new password\"))) : __jsx(\"p\", null, \"This link may have been expired\"));\n};\n\nvar style = {\n  \"margin\": \"auto\",\n  \"text-align\": \"center\"\n};\n\nResetPassword.getInitialProps = function _callee(ctx) {\n  var token, res;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          token = ctx.query.token;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:4000/verifytoken/\".concat(token), {\n            method: 'GET'\n          }));\n\n        case 3:\n          res = _context2.sent;\n          console.log(res);\n          return _context2.abrupt(\"return\", {\n            token: token\n          });\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default ResetPassword;","map":null,"metadata":{},"sourceType":"module"}