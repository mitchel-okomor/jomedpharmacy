{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\pages\\\\resetpassword\\\\[token].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var valid = _ref.valid,\n      token = _ref.token;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, \"Forget password\"), valid ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"Enter your new password.\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"New password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, \"Set new password\"))) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"This link may have been expired\"));\n};\n\nResetPasswordTokenPage.getInitialProps = function _callee(ctx) {\n  var token;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          token = ctx.query.token;\n          console.log(token);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/pages/resetpassword/[token].js"],"names":["ResetPassword","valid","token","handleSubmit","password","e","setPassword","target","value","ResetPasswordTokenPage","getInitialProps","ctx","query","console","log"],"mappings":";;;;;;;;AAAA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAsB;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAGxC,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEKD,KAAK,GACJ,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,KAAK,EAAEC,QAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAIC,WAAW,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAf;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,CAFF,CADI,GAgBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAlBN,CADA;AAuBD,CA1BH;;AA4BEC,sBAAsB,CAACC,eAAvB,GAAyC,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BT,UAAAA,KAD+B,GACrBS,GAAG,CAACC,KADiB,CAC/BV,KAD+B;AAEvCW,UAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;;AAFuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzC;;AAMA,eAAeF,aAAf","sourcesContent":["const ResetPassword = ({ valid, token }) => {\r\n  \r\n  \r\n    return (\r\n    <div>\r\n        <h2>Forget password</h2>\r\n        {valid ? (\r\n          <>\r\n            <p>Enter your new password.</p>\r\n            <form onSubmit={handleSubmit}>\r\n              <div>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"New password\"\r\n                  value={password}\r\n                  onChange={e => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <button type=\"submit\">Set new password</button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <p>This link may have been expired</p>\r\n        )}\r\n     </div>\r\n    );\r\n  };\r\n  \r\n  ResetPasswordTokenPage.getInitialProps = async ctx => {\r\n    const { token } = ctx.query;\r\n    console.log(token);\r\n \r\n  };\r\n  \r\n  export default ResetPassword;"]},"metadata":{},"sourceType":"module"}