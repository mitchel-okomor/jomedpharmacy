{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport './styles.scss';\nimport Layout from '../components/layout';\nimport cartcontext from '../components/cartcontext';\nimport fetch from 'isomorphic-unfetch'; // This default export is required in a new `pages/_app.js` file.\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      customer: '',\n      cart: [],\n      carttotal: 0\n    });\n\n    _defineProperty(this, \"fetchCustomer\", async () => {\n      const customerId = JSON.parse(localStorage.getItem('customerId'));\n      console.log(customerId);\n      const url = \"http://localhost:4000/customer/\" + customerId;\n      const res = await fetch(url);\n      const data = await res.json();\n      const customer = data.data;\n      return customer;\n    });\n\n    _defineProperty(this, \"addToCart\", async product => {\n      await this.setState({\n        cart: [...this.state.cart, product]\n      }); //save to local storage\n\n      localStorage.setItem('cart', JSON.stringify(this.state.cart));\n    });\n\n    _defineProperty(this, \"calculateTotal\", async price => {\n      await this.setState({\n        carttotal: this.state.carttotal + price\n      });\n      localStorage.setItem('total', JSON.stringify(this.state.carttotal));\n    });\n\n    _defineProperty(this, \"removeFromTotal\", async price => {\n      if (this.state.carttotal >= 1) {\n        await this.setState({\n          carttotal: this.state.carttotal - price\n        });\n        localStorage.setItem('total', JSON.stringify(this.state.carttotal));\n      }\n    });\n\n    _defineProperty(this, \"removeFromCart\", async id => {\n      console.log(\"product: \" + id);\n      let cart = this.state.cart;\n      let newCart = [];\n\n      for (let i = 0; i <= cart.length; i++) {\n        if (cart[i].id == id) {\n          continue;\n        }\n\n        console.log(cart[i]);\n        newCart.push(cart[i]);\n      }\n\n      await this.setState({\n        cart: newCart\n      }); //save to local storage\n\n      localStorage.setItem('cart', JSON.stringify(this.state.cart));\n      console.log(\"removing\");\n    });\n  }\n\n  componentDidMount() {\n    (async () => {\n      //get cart items from local storage\n      const cart = JSON.parse(localStorage.getItem('cart')); //get cart total\n\n      const carttotal = JSON.parse(localStorage.getItem('total'));\n      const customer = await this.fetchCustomer();\n      console.log(customer);\n\n      if (cart) {\n        this.setState({\n          customer: customer,\n          cart: cart,\n          carttotal: carttotal\n        });\n      }\n    })();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(cartcontext.Provider, {\n      value: {\n        cart: this.state.cart,\n        customer: this.state.customer,\n        addToCart: this.addToCart,\n        total: this.calculateTotal,\n        removeFromCart: this.removeFromCart,\n        removeFromTotal: this.removeFromTotal,\n        carttotal: this.state.carttotal\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 2\n      }\n    }, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 1\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 4\n      }\n    }))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/pages/_app.js"],"names":["App","Layout","cartcontext","fetch","MyApp","customer","cart","carttotal","customerId","JSON","parse","localStorage","getItem","console","log","url","res","data","json","product","setState","state","setItem","stringify","price","id","newCart","i","length","push","componentDidMount","fetchCustomer","render","Component","pageProps","props","addToCart","total","calculateTotal","removeFromCart","removeFromTotal"],"mappings":"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","sourcesContent":["import App from 'next/app';\r\nimport './styles.scss'\r\nimport Layout from '../components/layout';\r\nimport cartcontext from '../components/cartcontext';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\n\r\n  \r\n\r\n// This default export is required in a new `pages/_app.js` file.\r\nclass MyApp extends App{\r\n  state = {\r\n    customer:'',\r\n    cart : [],\r\n    carttotal : 0\r\n}\r\n\r\n\r\n\r\ncomponentDidMount(){\r\n\r\n (async()=>{\r\n     //get cart items from local storage\r\n  const cart = JSON.parse(localStorage.getItem('cart'));\r\n  //get cart total\r\n  const carttotal = JSON.parse(localStorage.getItem('total'));\r\nconst customer =await this.fetchCustomer();\r\nconsole.log(customer);\r\n  if (cart) {\r\n    this.setState({\r\n      customer:customer,\r\n       cart:cart,\r\n       carttotal:carttotal\r\n    });\r\n  }\r\n  })();\r\n \r\n};\r\n\r\nfetchCustomer = async ()=>{\r\n  const customerId = JSON.parse(localStorage.getItem('customerId'));\r\n  \r\n    console.log(customerId);\r\n    const url = \"http://localhost:4000/customer/\"+customerId;\r\n    const res = await fetch(url);\r\n    const data = await res.json();\r\n    const customer = data.data;\r\n  return customer;\r\n\r\n}\r\n\r\n//add a product to cart\r\naddToCart = async (product) => {\r\n await this.setState({\r\n      cart: [...this.state.cart, product]\r\n  });\r\n  //save to local storage\r\n  localStorage.setItem('cart', JSON.stringify(this.state.cart));\r\n}\r\n\r\ncalculateTotal = async (price) => {\r\n  await this.setState({\r\n    carttotal: this.state.carttotal + price\r\n  });\r\n  localStorage.setItem('total', JSON.stringify(this.state.carttotal));\r\n}\r\n\r\nremoveFromTotal = async (price) => {\r\n  if(this.state.carttotal >= 1){\r\n  await  this.setState({\r\n    carttotal: this.state.carttotal - price\r\n  });\r\n  localStorage.setItem('total', JSON.stringify(this.state.carttotal));\r\n  }\r\n  \r\n}\r\n\r\nremoveFromCart = async (id)=>{\r\n  console.log(\"product: \"+id);\r\n  let cart = this.state.cart\r\n  let newCart = [];\r\n  for(let i=0; i<=cart.length; i++){\r\nif(cart[i].id == id){\r\n  continue;\r\n}\r\nconsole.log(cart[i]);\r\nnewCart.push(cart[i]);\r\n  }\r\n await this.setState({\r\n    cart:newCart\r\n});\r\n//save to local storage\r\nlocalStorage.setItem('cart', JSON.stringify(this.state.cart));\r\n console.log(\"removing\")\r\n}\r\n\r\nrender(){ const { Component, pageProps } = this.props\r\n      return(\r\n <cartcontext.Provider value={{cart: this.state.cart, customer:this.state.customer, addToCart: this.addToCart, total: this.calculateTotal, removeFromCart: this.removeFromCart, removeFromTotal: this.removeFromTotal, carttotal: this.state.carttotal}}>\r\n<Layout>\r\n   <Component {...pageProps} /> \r\n</Layout>\r\n</cartcontext.Provider>\r\n  )  \r\n    }\r\n   \r\n}\r\n\r\n\r\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}