{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\pages\\\\locations.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport css from './locations.module.scss';\nimport React from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nexport class Locations extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"displayMarkers\", () => {\n      return this.state.stores.map((store, index) => {\n        return __jsx(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 16\n          }\n        });\n      });\n    });\n\n    _defineProperty(this, \"mapStyles\", {\n      width: '100%',\n      height: '100%'\n    });\n\n    this.state = {\n      stores: [{\n        lat: 47.49855629475769,\n        lng: -122.14184416996333\n      }, {\n        latitude: 47.359423,\n        longitude: -122.021071\n      }, {\n        latitude: 47.2052192687988,\n        longitude: -121.988426208496\n      }, {\n        latitude: 47.6307081,\n        longitude: -122.1434325\n      }, {\n        latitude: 47.3084488,\n        longitude: -122.2140121\n      }, {\n        latitude: 47.5524695,\n        longitude: -122.0425407\n      }]\n    };\n  }\n\n  render() {\n    return __jsx(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, this.displayMarkers());\n  }\n\n}\nexport default Locations;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/pages/locations.js"],"names":["css","React","Map","GoogleApiWrapper","Locations","Component","constructor","props","state","stores","map","store","index","lat","latitude","lng","longitude","console","log","width","height","render","google","mapStyles","displayMarkers"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,yBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;AAIA,OAAO,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,4CAaF,MAAM;AACrB,aAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7C,eAAO,MAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAoB,UAAA,EAAE,EAAEA,KAAxB;AAA+B,UAAA,QAAQ,EAAE;AAC/CC,YAAAA,GAAG,EAAEF,KAAK,CAACG,QADoC;AAE/CC,YAAAA,GAAG,EAAEJ,KAAK,CAACK;AAFoC,WAAzC;AAIR,UAAA,OAAO,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,OANM,CAAP;AAOD,KArBkB;;AAAA,uCAsBT;AACNC,MAAAA,KAAK,EAAE,MADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KAtBS;;AAGjB,SAAKZ,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CAAC;AAACI,QAAAA,GAAG,EAAE,iBAAN;AAAyBE,QAAAA,GAAG,EAAE,CAAC;AAA/B,OAAD,EACA;AAACD,QAAAA,QAAQ,EAAE,SAAX;AAAsBE,QAAAA,SAAS,EAAE,CAAC;AAAlC,OADA,EAEA;AAACF,QAAAA,QAAQ,EAAE,gBAAX;AAA6BE,QAAAA,SAAS,EAAE,CAAC;AAAzC,OAFA,EAGA;AAACF,QAAAA,QAAQ,EAAE,UAAX;AAAuBE,QAAAA,SAAS,EAAE,CAAC;AAAnC,OAHA,EAIA;AAACF,QAAAA,QAAQ,EAAE,UAAX;AAAuBE,QAAAA,SAAS,EAAE,CAAC;AAAnC,OAJA,EAKA;AAACF,QAAAA,QAAQ,EAAE,UAAX;AAAuBE,QAAAA,SAAS,EAAE,CAAC;AAAnC,OALA;AADG,KAAb;AAQD;;AAgBDK,EAAAA,MAAM,GAAG;AACP,WACI,MAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWe,MADrB;AAEE,MAAA,IAAI,EAAE,CAFR;AAGE,MAAA,KAAK,EAAEC,SAHT;AAIE,MAAA,aAAa,EAAE;AAAEV,QAAAA,GAAG,EAAE,MAAP;AAAeE,QAAAA,GAAG,EAAE,CAAC;AAArB,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKS,cAAL,EANH,CADJ;AAUD;;AAvC0C;AA0C/C,eAAepB,SAAf","sourcesContent":["import css from './locations.module.scss';\r\nimport React from 'react';\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\n\r\n\r\nexport class Locations extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        stores: [{lat: 47.49855629475769, lng: -122.14184416996333},\r\n                {latitude: 47.359423, longitude: -122.021071},\r\n                {latitude: 47.2052192687988, longitude: -121.988426208496},\r\n                {latitude: 47.6307081, longitude: -122.1434325},\r\n                {latitude: 47.3084488, longitude: -122.2140121},\r\n                {latitude: 47.5524695, longitude: -122.0425407}]\r\n      }\r\n    }\r\n  \r\n    displayMarkers = () => {\r\n      return this.state.stores.map((store, index) => {\r\n        return <Marker key={index} id={index} position={{\r\n         lat: store.latitude,\r\n         lng: store.longitude\r\n       }}\r\n       onClick={() => console.log(\"You clicked me!\")} />\r\n      })\r\n    }\r\n  mapStyles = {\r\n        width: '100%',\r\n        height: '100%',\r\n      };\r\n\r\n    render() {\r\n      return (\r\n          <Map\r\n            google={this.props.google}\r\n            zoom={8}\r\n            style={mapStyles}\r\n            initialCenter={{ lat: 47.444, lng: -122.176}}\r\n          >\r\n            {this.displayMarkers()}\r\n          </Map>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Locations;"]},"metadata":{},"sourceType":"module"}