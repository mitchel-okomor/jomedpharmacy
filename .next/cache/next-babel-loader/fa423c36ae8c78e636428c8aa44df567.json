{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\components\\\\prescription.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useReducer } from \"react\";\nimport css from './prescription.module.scss';\nimport axios from \"axios\";\nimport Loading from './loading';\nimport { useEffect, useContext } from 'react';\nimport appContext from './appcontext';\nconst initialState = {\n  customerId: \"\",\n  name: \"\",\n  email: \"\",\n  number: \"\",\n  description: \"\",\n  loading: false,\n  chat: css.chatclosed,\n  button: css.openbutton\n}; //handle state changes with reducer\n\nconst reducer = (state, {\n  field,\n  value\n}) => {\n  return _objectSpread({}, state, {\n    [field]: value\n  });\n};\n\nconst prescription = props => {\n  const {\n    customer\n  } = useContext(appContext); //use reducer hook to dispatch change action\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n\n  const handleChange = e => {\n    dispatch({\n      field: e.target.name,\n      value: e.target.value\n    });\n  };\n\n  console.log(state.customerId); //during component mounting\n\n  useEffect(() => {\n    const customerId = localStorage.getItem(\"customerId\");\n    dispatch({\n      field: \"customerId\",\n      value: customerId\n    });\n  }, []); //submit form data to backend server\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      field: \"loading\",\n      value: true\n    });\n    const url = 'http://localhost:4000/prescription';\n    console.log(state);\n\n    try {\n      const response = await axios.post(url, state, {\n        timeout: 30000\n      });\n\n      if (response.status == 200) {\n        console.log(response);\n        localStorage.setItem(\"customerId\", response);\n        dispatch({\n          field: \"loading\",\n          value: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        field: \"loading\",\n        value: false\n      });\n    }\n  };\n\n  const toggleChat = () => {\n    console.log(\"toggling\");\n\n    if (state.chat === css.chatclosed) {\n      dispatch({\n        field: \"chat\",\n        value: css.chatopen\n      });\n      dispatch({\n        field: \"button\",\n        value: css.closebutton\n      });\n    } else {\n      dispatch({\n        field: \"chat\",\n        value: css.chatclosed\n      });\n      dispatch({\n        field: \"button\",\n        value: css.openbutton\n      });\n    }\n  };\n\n  const {\n    name,\n    description,\n    number,\n    loading,\n    chat,\n    button\n  } = state;\n\n  if (loading) {\n    return __jsx(\"div\", {\n      className: css.prescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 3\n      }\n    }, __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 1\n      }\n    }));\n  } else if (Boolean(customer.is_admin) || !undefined) {\n    return \"\";\n  }\n\n  return __jsx(\"div\", {\n    className: css.prescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    className: button,\n    onClick: toggleChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, \"prescription\"), __jsx(\"div\", {\n    className: chat,\n    id: css.myForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), __jsx(\"form\", {\n    className: css.formcontainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, __jsx(\"h3\", {\n    className: css.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 24\n    }\n  }, \"Send us your prescription\"))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    for: \"fname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Full Name:\"), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 51\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    value: customer ? customer.name : name,\n    placeholder: \"John Okafor\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    for: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"phone number:\"), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 55\n    }\n  }), __jsx(\"input\", {\n    type: \"number\",\n    id: \"number\",\n    name: \"number\",\n    value: customer ? customer.number : number,\n    placeholder: \"08090213567\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    for: \"prescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"prescription details:\"), \" \", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 69\n    }\n  }), __jsx(\"textarea\", {\n    type: \"text\",\n    id: \"prescription\",\n    name: \"description\",\n    value: description,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: css.btn,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Submit\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    className: css.cancel,\n    onClick: toggleChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"close\")))));\n};\n\nexport default prescription;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/components/prescription.js"],"names":["React","useState","useReducer","css","axios","Loading","useEffect","useContext","appContext","initialState","customerId","name","email","number","description","loading","chat","chatclosed","button","openbutton","reducer","state","field","value","prescription","props","customer","dispatch","handleChange","e","target","console","log","localStorage","getItem","handleSubmit","preventDefault","url","response","post","timeout","status","setItem","error","toggleChat","chatopen","closebutton","Boolean","is_admin","undefined","myForm","formcontainer","heading","btn","cancel"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAC,EADQ;AAEfC,EAAAA,IAAI,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,WAAW,EAAE,EALM;AAMrBC,EAAAA,OAAO,EAAE,KANY;AAOrBC,EAAAA,IAAI,EAAEb,GAAG,CAACc,UAPW;AAQrBC,EAAAA,MAAM,EAAEf,GAAG,CAACgB;AARS,CAArB,C,CAWA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQ;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAR,KAA6B;AAC7C,2BAAYF,KAAZ;AAAmB,KAACC,KAAD,GAASC;AAA5B;AACC,CAFD;;AAIA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAACC,IAAAA;AAAD,MAAanB,UAAU,CAACC,UAAD,CAA7B,CAD8B,CAE5B;;AACF,QAAM;AAAA,OAACa,KAAD;AAAA,OAAQM;AAAR,MAAoBzB,UAAU,CAACkB,OAAD,EAAUX,YAAV,CAApC;;AACA,QAAMmB,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,QAAQ,CAAC;AAAEL,MAAAA,KAAK,EAAEO,CAAC,CAACC,MAAF,CAASnB,IAAlB;AAAwBY,MAAAA,KAAK,EAAEM,CAAC,CAACC,MAAF,CAASP;AAAxC,KAAD,CAAR;AACD,GAFD;;AAGAQ,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACX,UAAlB,EAP8B,CAS9B;;AACAJ,EAAAA,SAAS,CAAC,MAAI;AAChB,UAAMI,UAAU,GAAGuB,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;AACAP,IAAAA,QAAQ,CAAC;AAACL,MAAAA,KAAK,EAAC,YAAP;AAAqBC,MAAAA,KAAK,EAACb;AAA3B,KAAD,CAAR;AAEG,GAJQ,EAIP,EAJO,CAAT,CAV8B,CAgB9B;;AACA,QAAMyB,YAAY,GAAE,MAAON,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACO,cAAF;AAEKT,IAAAA,QAAQ,CAAC;AAACL,MAAAA,KAAK,EAAC,SAAP;AAAkBC,MAAAA,KAAK,EAAC;AAAxB,KAAD,CAAR;AACR,UAAMc,GAAG,GAAG,oCAAZ;AACEN,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;;AACA,QAAG;AACH,YAAMiB,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,IAAN,CAAWF,GAAX,EAAgBhB,KAAhB,EAAuB;AAC5CmB,QAAAA,OAAO,EAAE;AADmC,OAAvB,CAAvB;;AAGA,UAAGF,QAAQ,CAACG,MAAT,IAAiB,GAApB,EAAwB;AACvBV,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACAL,QAAAA,YAAY,CAACS,OAAb,CAAqB,YAArB,EAAmCJ,QAAnC;AACHX,QAAAA,QAAQ,CAAC;AAACL,UAAAA,KAAK,EAAC,SAAP;AAAkBC,UAAAA,KAAK,EAAC;AAAxB,SAAD,CAAR;AACG;AACF,KATC,CAUA,OAAMoB,KAAN,EAAY;AACVZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACAhB,MAAAA,QAAQ,CAAC;AAACL,QAAAA,KAAK,EAAC,SAAP;AAAkBC,QAAAA,KAAK,EAAC;AAAxB,OAAD,CAAR;AACD;AAEA,GArBD;;AAuBA,QAAMqB,UAAU,GAAG,MAAI;AACrBb,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACJ,QAAIX,KAAK,CAACL,IAAN,KAAeb,GAAG,CAACc,UAAvB,EAAkC;AAChCU,MAAAA,QAAQ,CAAC;AAACL,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,KAAK,EAACpB,GAAG,CAAC0C;AAAzB,OAAD,CAAR;AACAlB,MAAAA,QAAQ,CAAC;AAACL,QAAAA,KAAK,EAAC,QAAP;AAAiBC,QAAAA,KAAK,EAACpB,GAAG,CAAC2C;AAA3B,OAAD,CAAR;AACD,KAHD,MAII;AACFnB,MAAAA,QAAQ,CAAC;AAACL,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,KAAK,EAACpB,GAAG,CAACc;AAAzB,OAAD,CAAR;AACAU,MAAAA,QAAQ,CAAC;AAACL,QAAAA,KAAK,EAAC,QAAP;AAAiBC,QAAAA,KAAK,EAACpB,GAAG,CAACgB;AAA3B,OAAD,CAAR;AAED;AACE,GAXD;;AAgBA,QAAM;AAAER,IAAAA,IAAF;AAAQG,IAAAA,WAAR;AAAqBD,IAAAA,MAArB;AAA6BE,IAAAA,OAA7B;AAAsCC,IAAAA,IAAtC;AAA4CE,IAAAA;AAA5C,MAAsDG,KAA5D;;AACA,MAAGN,OAAH,EAAW;AAEb,WACE;AAAK,MAAA,SAAS,EAAEZ,GAAG,CAACqB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,CADF;AAKK,GAPH,MAQO,IAAGuB,OAAO,CAACrB,QAAQ,CAACsB,QAAV,CAAP,IAA8B,CAACC,SAAlC,EAA4C;AAC/C,WAAO,EAAP;AACD;;AACH,SACE;AAAK,IAAA,SAAS,EAAE9C,GAAG,CAACqB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,SAAS,EAAEN,MAAnB;AAA2B,IAAA,OAAO,EAAE0B,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA;AAAK,IAAA,SAAS,EAAE5B,IAAhB;AAAsB,IAAA,EAAE,EAAEb,GAAG,CAAC+C,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI;AAAM,IAAA,SAAS,EAAE/C,GAAG,CAACgD,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAI,IAAA,SAAS,EAAEhD,GAAG,CAACiD,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAH,CAAR,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,OAGwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHxC,EAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAE1B,QAAQ,GAACA,QAAQ,CAACf,IAAV,GAAgBA,IAJjC;AAKE,IAAA,WAAW,EAAC,aALd;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,QAAQ,EAAEiB,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE;AAAO,IAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdF,OAc4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAd5C,EAeE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEF,QAAQ,GAACA,QAAQ,CAACb,MAAV,GAAiBA,MAJlC;AAKE,IAAA,WAAW,EAAC,aALd;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,QAAQ,EAAEe,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,EA2BE;AAAO,IAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA3BF,OA2B0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3B1D,EA4BE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,cAFL;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,KAAK,EAAEd,WAJT;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,QAAQ,EAAEc,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,EAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,EAqCE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEzB,GAAG,CAACkD,GAArC;AAA2C,IAAA,OAAO,EAAElB,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArCF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCF,EAuCE;AAAS,IAAA,SAAS,EAAEhC,GAAG,CAACmD,MAAxB;AAAgC,IAAA,OAAO,EAAEV,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvCF,CADF,CAFJ,CAFA,CADF;AAmDD,CAvHD;;AAyHA,eAAepB,YAAf","sourcesContent":["import React, { useState, useReducer } from \"react\";\r\nimport css from './prescription.module.scss';\r\nimport axios from \"axios\";\r\nimport Loading from './loading';\r\nimport {useEffect, useContext} from 'react';\r\nimport appContext from './appcontext';\r\n\r\n\r\n\r\nconst initialState = {\r\n  customerId:\"\",\r\n      name: \"\",\r\n  email: \"\",\r\n  number: \"\",\r\n  description: \"\",\r\nloading: false,\r\nchat: css.chatclosed,\r\nbutton: css.openbutton\r\n};\r\n\r\n//handle state changes with reducer\r\nconst reducer = (state, { field, value }) => {\r\nreturn { ...state, [field]: value  };\r\n};\r\n\r\nconst prescription = (props) => {\r\n  const {customer} = useContext(appContext);\r\n    //use reducer hook to dispatch change action\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const handleChange = (e) => {\r\n    dispatch({ field: e.target.name, value: e.target.value });\r\n  };\r\n  console.log(state.customerId);\r\n\r\n  //during component mounting\r\n  useEffect(()=>{\r\nconst customerId = localStorage.getItem(\"customerId\");\r\ndispatch({field:\"customerId\", value:customerId}); \r\n\r\n  },[])\r\n\r\n  //submit form data to backend server\r\n  const handleSubmit =async (e) => {\r\n   e.preventDefault();\r\n   \r\n        dispatch({field:\"loading\", value:true});\r\nconst url = 'http://localhost:4000/prescription';\r\n  console.log(state);  \r\n  try{\r\n  const response = await axios.post(url, state, {\r\n    timeout: 30000\r\n  });\r\n  if(response.status==200){\r\n   console.log(response);\r\n   localStorage.setItem(\"customerId\", response);\r\ndispatch({field:\"loading\", value:false}); \r\n  }\r\n}\r\n  catch(error){\r\n    console.log(error);\r\n    dispatch({field:\"loading\", value:false}); \r\n  }\r\n  \r\n  };\r\n\r\n  const toggleChat = ()=>{\r\n    console.log(\"toggling\")\r\nif (state.chat === css.chatclosed){\r\n  dispatch({field:\"chat\", value:css.chatopen});\r\n  dispatch({field:\"button\", value:css.closebutton}); \r\n}\r\nelse{\r\n  dispatch({field:\"chat\", value:css.chatclosed}); \r\n  dispatch({field:\"button\", value:css.openbutton}); \r\n\r\n}\r\n  }\r\n\r\n\r\n\r\n\r\n  const { name, description, number, loading, chat, button} = state;\r\n  if(loading){\r\n    \r\nreturn(\r\n  <div className={css.prescription}>\r\n<Loading />\r\n    </div>\r\n) \r\n    }\r\n    else if(Boolean(customer.is_admin) || !undefined){\r\n      return \"\";\r\n    }\r\n  return (\r\n    <div className={css.prescription}>\r\n    <button className={button} onClick={toggleChat}>prescription</button>\r\n    <div className={chat} id={css.myForm}>\r\n      <br />\r\n        <form className={css.formcontainer}>\r\n          <fieldset>\r\n            <legend><b><h3 className={css.heading}>Send us your prescription</h3></b></legend>\r\n            <br />\r\n            <label for=\"fname\">Full Name:</label> <br />\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={customer?customer.name: name}\r\n              placeholder=\"John Okafor\"\r\n              required\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label for=\"number\">phone number:</label> <br />\r\n            <input\r\n              type=\"number\"\r\n              id=\"number\"\r\n              name=\"number\"\r\n              value={customer?customer.number:number}\r\n              placeholder=\"08090213567\"\r\n              required\r\n              onChange={handleChange}\r\n              \r\n            />\r\n            <br />\r\n            <br />\r\n            <label for=\"prescription\">prescription details:</label> <br />\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"prescription\"\r\n              name=\"description\"\r\n              value={description}\r\n              required\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <button type=\"submit\" className={css.btn}  onClick={handleSubmit}>Submit</button>\r\n            <br />\r\n            <button  className={css.cancel} onClick={toggleChat}>close</button>\r\n          </fieldset>\r\n        </form>\r\n        </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default prescription;\r\n"]},"metadata":{},"sourceType":"module"}