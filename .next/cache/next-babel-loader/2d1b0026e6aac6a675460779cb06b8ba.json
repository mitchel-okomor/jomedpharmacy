{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\components\\\\login.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useReducer } from \"react\";\nimport css from './login.module.scss';\nimport axios from \"axios\";\nimport Loading from './loading';\nimport appContext from './appcontext';\nimport Link from 'next/link';\nvar initialState = {\n  email: \"\",\n  password: \"\",\n  loading: false,\n  message: \"\"\n}; //handle state changes with reducer\n\nvar reducer = function reducer(state, _ref) {\n  var field = _ref.field,\n      value = _ref.value;\n  return _objectSpread({}, state, _defineProperty({}, field, value));\n};\n\nvar Login = function Login(props) {\n  var _useContext = useContext(appContext),\n      setCustomer = _useContext.setCustomer; //use reducer hook to dispatch change action\n\n\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var handleChange = function handleChange(e) {\n    dispatch({\n      field: e.target.name,\n      value: e.target.value\n    });\n  }; //submit form data to backend server\n\n\n  var handleSubmit = function handleSubmit(e) {\n    var url, response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            dispatch({\n              field: \"loading\",\n              value: true\n            });\n            url = 'http://localhost:4000/logincustomer';\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(url, state, {\n              timeout: 30000\n            }));\n\n          case 6:\n            response = _context.sent;\n\n            if (response.status == 200) {\n              console.log(\"passed: \" + JSON.stringify(response.data.message));\n              dispatch({\n                field: \"message\",\n                value: response.data.message\n              });\n              localStorage.setItem(\"customerId\", response.data.customer.customer_id);\n              localStorage.setItem(\"token\", response.data.info.token);\n              setCustomer(response.data.customer);\n              dispatch({\n                field: \"loading\",\n                value: false\n              });\n            } else {\n              console.log(\"failed: \" + response.data);\n              dispatch({\n                field: \"message\",\n                value: response.data.message\n              });\n              dispatch({\n                field: \"loading\",\n                value: false\n              });\n            }\n\n            _context.next = 15;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n            dispatch({\n              field: \"message\",\n              value: \"Email or Password Incorrect\"\n            });\n            dispatch({\n              field: \"loading\",\n              value: false\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n\n  var email = state.email,\n      password = state.password,\n      loading = state.loading,\n      message = state.message;\n\n  if (loading) {\n    return __jsx(Loading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: css.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    className: css.login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(\"legend\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Login:\"), __jsx(\"label\", {\n    \"for\": \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Email:\"), \" \", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 55\n    }\n  }), __jsx(\"input\", {\n    type: \"email\",\n    id: \"email-address\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), __jsx(\"label\", {\n    \"for\": \"login-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"password:\"), \" \", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 59\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    id: \"login-password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), \" \", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }\n  }), __jsx(\"button\", {\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Submit\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 3\n    }\n  }, message, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: css.password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, __jsx(Link, {\n    href: \"/resetpassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 61\n    }\n  }, \"forgot Password\")), \" \"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/components/login.js"],"names":["React","useContext","useReducer","css","axios","Loading","appContext","Link","initialState","email","password","loading","message","reducer","state","field","value","Login","props","setCustomer","dispatch","handleChange","e","target","name","handleSubmit","preventDefault","url","post","timeout","response","status","console","log","JSON","stringify","data","localStorage","setItem","customer","customer_id","info","token","form","login"],"mappings":"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","sourcesContent":["import React, {useContext, useReducer } from \"react\";\r\nimport css from './login.module.scss';\r\nimport axios from \"axios\";\r\nimport Loading from './loading';\r\nimport appContext from './appcontext';\r\nimport Link from 'next/link';\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  loading: false,\r\n  message: \"\"\r\n};\r\n\r\n\r\n\r\n//handle state changes with reducer\r\nconst reducer = (state, { field, value }) => {\r\n  return { ...state, [field]: value };\r\n};\r\n\r\nconst Login = (props) => {\r\n\r\n  const {setCustomer } = useContext(appContext);\r\n\r\n    //use reducer hook to dispatch change action\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const handleChange = (e) => {\r\n    dispatch({ field: e.target.name, value: e.target.value });\r\n  };\r\n\r\n  //submit form data to backend server\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch({field:\"loading\", value:true});\r\n    const url = 'http://localhost:4000/logincustomer';\r\n    try{\r\n    const response = await axios.post(url, state, {\r\n      timeout: 30000\r\n    });\r\n    if(response.status==200){\r\n           console.log(\"passed: \"+JSON.stringify(response.data.message));\r\n           dispatch({field:\"message\", value:response.data.message}); \r\n     localStorage.setItem(\"customerId\", response.data.customer.customer_id);\r\n     localStorage.setItem(\"token\", response.data.info.token);\r\n     setCustomer(response.data.customer);\r\n     dispatch({field:\"loading\", value:false}); \r\n    }\r\n    else{\r\n      console.log(\"failed: \"+response.data)\r\n      dispatch({field:\"message\", value:response.data.message}); \r\n      dispatch({field:\"loading\", value:false}); \r\n\r\n    }\r\n  }\r\n    catch(error){\r\n      console.log(error);\r\n      dispatch({field:\"message\", value:\"Email or Password Incorrect\"}); \r\n      dispatch({field:\"loading\", value:false}); \r\n    }  \r\n  };\r\n\r\n\r\n  const {email, password, loading, message } = state;\r\n  if(loading){\r\n    return <Loading />\r\n        }\r\n  return (\r\n\r\n      <div className={css.form}>\r\n        <form className={css.login}>\r\n          <fieldset>\r\n            <legend>Login:</legend>\r\n            <label for=\"email-address\">Email:</label> <br />\r\n            <input\r\n              type=\"email\"\r\n              id=\"email-address\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label for=\"login-password\">password:</label> <br />\r\n            <input\r\n              type=\"password\"\r\n              id=\"login-password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            /> <br />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n            <br/>           \r\n  <div>{message}<br /></div>\r\n\r\n  <div className={css.password}><Link href=\"/resetpassword\"><a>forgot Password</a></Link> </div>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}