{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport './styles.scss';\nimport Layout from '../components/layout';\nimport appContext from '../components/appcontext';\nimport fetch from 'isomorphic-unfetch'; // This default export is required in a new `pages/_app.js` file.\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      customer: '',\n      cart: [],\n      carttotal: 0\n    });\n\n    _defineProperty(this, \"fetchCustomer\", async () => {\n      const customerId = localStorage.getItem('customerId');\n      console.log(customerId);\n      const url = \"http://localhost:4000/customer/\" + customerId;\n      const res = await fetch(url, {\n        headers: {\n          \"Authorization\": localStorage.getItem('token')\n        }\n      });\n      const data = await res.json();\n      const customer = data.data;\n      console.log(customer);\n      return customer;\n    });\n\n    _defineProperty(this, \"addToCart\", async product => {\n      if (product.quantity) {\n        console.log(\"found product\");\n        let productHolder = \"\";\n\n        for (let i = 0; i <= this.state.cart.length; i++) {\n          if (this.state.cart[i].id == product.id) {\n            console.log(this.state.cart[i]);\n            productHolder = this.state.cart[i];\n            console.log(this.state.cart[i]);\n            delete this.state.cart[i];\n            console.log(\"cart: \" + productHolder);\n            productHolder.quantity += 1;\n            await this.setState({\n              cart: [...this.state.cart, productHolder]\n            }); //save to local storage\n\n            localStorage.setItem('cart', JSON.stringify(this.state.cart));\n          }\n        }\n      } else {\n        product.quantity = 1;\n        await this.setState({\n          cart: [...this.state.cart, product]\n        }); //save to local storage\n\n        localStorage.setItem('cart', JSON.stringify(this.state.cart));\n      }\n    });\n\n    _defineProperty(this, \"calculateTotal\", async price => {\n      await this.setState({\n        carttotal: this.state.carttotal + price\n      });\n      localStorage.setItem('total', JSON.stringify(this.state.carttotal));\n    });\n\n    _defineProperty(this, \"removeFromTotal\", async product => {\n      let producdToRemove = this.state.cart.filter(item => item.id === product.id);\n\n      if (this.state.carttotal >= 1 && producdToRemove) {\n        await this.setState({\n          carttotal: this.state.carttotal - product.price\n        });\n        localStorage.setItem('total', JSON.stringify(this.state.carttotal));\n      }\n    });\n\n    _defineProperty(this, \"removeFromCart\", async product => {\n      console.log(\"product: \" + product.id);\n      let newCart = this.state.cart.filter(item => item.id !== product.id);\n      await this.setState({\n        cart: newCart\n      }); //save to local storage\n\n      console.log(newCart.length);\n      localStorage.setItem('cart', JSON.stringify(this.state.cart));\n    });\n\n    _defineProperty(this, \"setCustomer\", val => {\n      console.log(\"SetCustomer: \" + val);\n      this.setState({\n        customer: val\n      });\n    });\n  }\n\n  componentDidMount() {\n    (async () => {\n      //get cart items from local storage\n      const cart = JSON.parse(localStorage.getItem('cart')); //get cart total\n\n      const carttotal = JSON.parse(localStorage.getItem('total'));\n      const customer = await this.fetchCustomer();\n      console.log(customer);\n\n      if (cart) {\n        this.setState({\n          customer: customer,\n          cart: cart,\n          carttotal: carttotal\n        });\n      }\n    })();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(appContext.Provider, {\n      value: {\n        cart: this.state.cart,\n        customer: this.state.customer,\n        setCustomer: this.setCustomer,\n        addToCart: this.addToCart,\n        total: this.calculateTotal,\n        removeFromCart: this.removeFromCart,\n        removeFromTotal: this.removeFromTotal,\n        carttotal: this.state.carttotal\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 2\n      }\n    }, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 1\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 4\n      }\n    }))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/pages/_app.js"],"names":["App","Layout","appContext","fetch","MyApp","customer","cart","carttotal","customerId","localStorage","getItem","console","log","url","res","headers","data","json","product","quantity","productHolder","i","state","length","id","setState","setItem","JSON","stringify","price","producdToRemove","filter","item","newCart","val","componentDidMount","parse","fetchCustomer","render","Component","pageProps","props","setCustomer","addToCart","total","calculateTotal","removeFromCart","removeFromTotal"],"mappings":"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","sourcesContent":["import App from 'next/app';\r\nimport './styles.scss'\r\nimport Layout from '../components/layout';\r\nimport appContext from '../components/appcontext';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\n\r\n  \r\n\r\n// This default export is required in a new `pages/_app.js` file.\r\nclass MyApp extends App{\r\n  state = {\r\n    customer:'',\r\n    cart : [],\r\n    carttotal : 0\r\n}\r\n\r\n\r\n\r\ncomponentDidMount(){\r\n\r\n (async()=>{\r\n     //get cart items from local storage\r\n  const cart = JSON.parse(localStorage.getItem('cart'));\r\n  \r\n  //get cart total\r\n  const carttotal = JSON.parse(localStorage.getItem('total'));\r\nconst customer =await this.fetchCustomer();\r\nconsole.log(customer);\r\n  if (cart) {\r\n    this.setState({\r\n      customer:customer,\r\n       cart:cart,\r\n       carttotal:carttotal\r\n    });\r\n  }\r\n  })();\r\n \r\n};\r\n\r\nfetchCustomer = async ()=>{\r\n  const customerId = localStorage.getItem('customerId');\r\n  \r\n    console.log(customerId);\r\n    const url = \"http://localhost:4000/customer/\"+customerId;\r\n    const res = await fetch(url, {\r\n      headers: {\r\n        \"Authorization\": localStorage.getItem('token')\r\n    }});\r\n    const data = await res.json();\r\n    const customer = data.data;\r\n    console.log(customer);\r\n  return customer;\r\n\r\n}\r\n\r\n//add a product to cart\r\naddToCart = async (product) => {\r\n  if(product.quantity){\r\n    console.log(\"found product\");\r\n      let productHolder = \"\";\r\n   for(let i=0; i<=this.state.cart.length; i++){\r\n       if(this.state.cart[i].id == product.id ){\r\n        console.log(this.state.cart[i]);\r\n               productHolder = this.state.cart[i];\r\n               console.log(this.state.cart[i]);\r\n               delete this.state.cart[i];\r\n               console.log(\"cart: \" + productHolder);\r\n \r\n               productHolder.quantity += 1;\r\n    await this.setState({\r\n      cart: [...this.state.cart, productHolder]\r\n  });\r\n  //save to local storage\r\n  localStorage.setItem('cart', JSON.stringify(this.state.cart));\r\n  \r\n\r\n       }\r\n\r\n\r\n    }\r\n   }\r\nelse{\r\n  product.quantity = 1;\r\n  await this.setState({\r\n    cart: [...this.state.cart, product]\r\n});\r\n//save to local storage\r\nlocalStorage.setItem('cart', JSON.stringify(this.state.cart));\r\n}\r\n}\r\n\r\ncalculateTotal = async (price) => {\r\n  await this.setState({\r\n    carttotal: this.state.carttotal + price\r\n  });\r\n  localStorage.setItem('total', JSON.stringify(this.state.carttotal));\r\n}\r\n\r\nremoveFromTotal = async (product) => {\r\n  let producdToRemove = this.state.cart.filter(item => item.id === product.id);\r\n\r\n  if(this.state.carttotal >= 1 && producdToRemove ){\r\n  await  this.setState({\r\n    carttotal: this.state.carttotal - product.price\r\n  });\r\n  localStorage.setItem('total', JSON.stringify(this.state.carttotal));\r\n  }\r\n  \r\n}\r\n\r\nremoveFromCart = async (product)=>{\r\n  console.log(\"product: \"+product.id);\r\n  let newCart = this.state.cart.filter(item => item.id !== product.id);\r\n await this.setState({\r\n    cart:newCart\r\n});\r\n//save to local storage\r\nconsole.log(newCart.length);\r\nlocalStorage.setItem('cart', JSON.stringify(this.state.cart));\r\n}\r\n\r\n//set customer to update state and context\r\nsetCustomer = (val) =>{\r\n\r\n  console.log(\"SetCustomer: \"+val);\r\n  this.setState(\r\n    {\r\n      customer: val\r\n    }\r\n  );\r\n}\r\n\r\n\r\n\r\nrender(){ const { Component, pageProps } = this.props\r\n      return(\r\n <appContext.Provider value={{cart: this.state.cart, customer:this.state.customer, setCustomer:this.setCustomer, addToCart: this.addToCart, total: this.calculateTotal, removeFromCart: this.removeFromCart, removeFromTotal: this.removeFromTotal, carttotal: this.state.carttotal}}>\r\n<Layout>\r\n   <Component {...pageProps} /> \r\n</Layout>\r\n</appContext.Provider>\r\n  )  \r\n    }\r\n   \r\n}\r\n\r\n\r\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}