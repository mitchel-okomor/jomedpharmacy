{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User PC\\\\workspace\\\\jomed\\\\jomed-pharmacy\\\\pages\\\\account.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport css from \"./account.module.scss\";\nimport Login from \"../components/login\";\nimport Signup from \"../components/signup\";\nimport fetch from 'isomorphic-unfetch';\n\nvar Account = function Account(props) {\n  var _useState = useState(),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var res, data, user;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:4000/customer/16'));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 5:\n              data = _context.sent;\n              user = data.data;\n              console.log(data.data);\n              setUser({\n                user: user\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  var name = user.name,\n      email = user.email,\n      number = user.number,\n      address = user.address;\n\n  if (user.name) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 8\n      }\n    }, \"User Profile\"), __jsx(\"table\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }\n    }, __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }\n    }, \"  \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    }, \"name\"), \" \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 30\n      }\n    }, name)), __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }\n    }, \"  \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    }, \"name\"), \" \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 30\n      }\n    }, email)), __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }\n    }, \"  \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    }, \"name\"), \" \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }\n    }, number)), __jsx(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }\n    }, \"  \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }, \"name\"), \" \", __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 30\n      }\n    }, address))));\n  }\n\n  return __jsx(\"div\", {\n    className: css.account,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: css.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Account\"), __jsx(\"div\", {\n    className: css.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(Signup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(Login, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Account;","map":{"version":3,"sources":["C:/Users/User PC/workspace/jomed/jomed-pharmacy/pages/account.js"],"names":["React","useState","useEffect","css","Login","Signup","fetch","Account","props","user","setUser","fetchData","res","json","data","console","log","name","email","number","address","account","heading","form"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport css from \"./account.module.scss\";\r\nimport Login from \"../components/login\";\r\nimport Signup from \"../components/signup\";\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\n\r\n\r\nconst Account = (props) => {\r\nconst [user, setUser] = useState();\r\n\r\n \r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await fetch('http://localhost:4000/customer/16');\r\n      const data = await res.json();\r\n     const user = data.data;\r\n      console.log(data.data);\r\n     setUser({user});\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const { name, email, number, address } = user;\r\n if(user.name){\r\n   return(\r\n     <div>\r\n       <h2>User Profile</h2>\r\n       <table>\r\n         <tr>  <td>name</td> <td>{name}</td></tr>\r\n         <tr>  <td>name</td> <td>{email}</td></tr>\r\n         <tr>  <td>name</td> <td>{number}</td></tr>\r\n         <tr>  <td>name</td> <td>{address}</td></tr>\r\n       </table>\r\n     </div>\r\n   )\r\n }\r\n  return (\r\n    <div className={css.account}>\r\n      <h1 className={css.heading}>Account</h1>\r\n      <div className={css.form}>\r\n      <Signup />  \r\n      <Login />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n"]},"metadata":{},"sourceType":"module"}